{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/BigBasketData.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/cart-list/cart-list.component.ts","./src/app/cart-list/cart-list.component.html","./src/app/cartdata.service.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/inventory/inventory.component.ts","./src/app/inventory/inventory.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/pagenotfound/pagenotfound.component.ts","./src/app/pagenotfound/pagenotfound.component.html","./src/app/priceupdater/priceupdater.component.ts","./src/app/priceupdater/priceupdater.component.html","./src/app/product-list/product-list.component.ts","./src/app/product-list/product-list.component.html","./src/app/product-list/product.ts","./src/app/productdataservice.service.ts","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/app/routing/routing.module.ts","./src/app/userdata.service.ts","./src/app/userdetails/userdetails.component.ts","./src/app/userdetails/userdetails.component.html","./src/app/userlist/userlist.component.ts","./src/app/userlist/userlist.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","\nimport { Injectable } from '@angular/core';\nimport { Product } from './product-list/product';\n\n@Injectable({\n  providedIn:'root'\n})\nexport class BigBasketDataService{\n  productList:Array<Product>=[];\n  constructor() {  \n    //super();\n    let p1 = new Product(1, \"MotoG4\", \"Mobiles\", 24000, \"assets/images/1.jpg\");\n    let p2 = new Product(2, \"SonyDSC\", \"Camera\", 64000, \"assets/images/2.jpg\");\n    let p3 = new Product(3, \"Lenovo110\", \"Laptops\", 54000, \"assets/images/3.jpg\");\n    let p4 = new Product(4, \"Xiomi55\", \"Mobiles\", 14000, \"assets/images/4.jpg\");\n    let p5 = new Product(5, \"Samsung Galaxy\", \"Mobiles\", 44000, \"assets/images/5.jpg\");\n    this.productList.push(p1);\n    this.productList.push(p2);\n    this.productList.push(p3);\n    this.productList.push(p4);\n    this.productList.push(p5);\n  }\n  getProductList():Array<Product>{\n    return this.productList;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { UserlistComponent } from './userlist/userlist.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { UserdetailsComponent } from './userdetails/userdetails.component';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { HeaderComponent } from './header/header.component';\nimport { CartListComponent } from './cart-list/cart-list.component';\n\n\nconst routes: Routes = [\n  {\n    path:'',\n    component:LoginComponent\n  },\n  {\n    path:'login',\n    component:LoginComponent\n  },\n  {\n    path:'users',\n    component:UserlistComponent,\n    children:[\n      {\n        path:'userdetails/:id',\n        component:UserdetailsComponent\n      }\n    ]\n  },\n  {\n    path:'inventory',\n    component:InventoryComponent\n  },\n  {\n    path:'registration',\n    component:RegistrationComponent\n  },\n  {\n    path:'products',\n    component:ProductListComponent\n  },\n  {\n    path:'header',\n    component:HeaderComponent\n  },\n  {\n    path:'cart',\n    component:CartListComponent\n  },\n  {\n    path: '**',\n    component: PagenotfoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core'; //typescript imports\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl:'./app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'demo'; //model\n  username:string;\n  editTitle(){//controller\n\n  }\n  constructor(private auth:AuthService, private router:Router) { }\n  ngOnInit(){\n    this.auth.getUserName().subscribe(newusername => this.username= newusername);\n  }\n  logout(){\n    this.auth.logout();\n    this.router.navigate(['/login']);\n  }\n}\n","<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"username\">\n    <div class=\"navbar-nav\">\n        <!-- <app-menu></app-menu> -->\n        <a class=\"nav-item nav-link\" routerLink=\"/users\" mat-menu-item>Home</a>\n        <a class=\"nav-item nav-link\" routerLink=\"/products\">Product</a>\n        <a class=\"nav-item nav-link\" routerLink=\"/cart\">cart</a>\n        <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n    </div>\n</nav>\n<router-outlet></router-outlet>","import { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { BigBasketDataService } from './BigBasketData.service';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { PriceupdaterComponent } from './priceupdater/priceupdater.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HeaderComponent } from './header/header.component';\nimport { UserlistComponent } from './userlist/userlist.component';\nimport { UserdetailsComponent } from './userdetails/userdetails.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { CartListComponent } from './cart-list/cart-list.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RoutingModule } from './routing/routing.module';\n//import { MatInputModule } from \"@angular/material\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ProductListComponent,\n    PriceupdaterComponent,\n    HeaderComponent,\n    UserlistComponent,\n    UserdetailsComponent,\n    RegistrationComponent,\n    MenuComponent,\n    InventoryComponent,\n    CartListComponent // list of components\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    RoutingModule,\n  ],\n  providers: [BigBasketDataService],\n  bootstrap: [AppComponent] // which is root component\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { strict } from 'assert';\nimport { UserdataService } from './userdata.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  subject = new Subject<string>();// stream of values\n  constructor(private userDataSerice:UserdataService) { \n    \n  }\n  setUserName(username:string){\n    this.subject.next(username); // add it to the stream of values\n  }\n  getUserName():Observable<string>{\n    return this.subject.asObservable(); // emit  every new value\n  }\n  login(username:string,password:string):string{\n    //const users = this.userDataSerice.userList.find();\n    const users = this.userDataSerice.getUsers();\n    console.log(users);\n    const user=users.find(x => x.username === username && x.password === password);\n    if (!user) {\n      return 'Invalid user name or password';\n    }else{\n      return '';\n    }\n  }\n  logout(){\n    this.subject.next(null);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CartdataService } from '../cartdata.service';\nimport { Product } from '../product-list/product';\n\n@Component({\n  selector: 'app-cart-list',\n  templateUrl: './cart-list.component.html',\n  styleUrls: ['./cart-list.component.css']\n})\nexport class CartListComponent implements OnInit {\n  cartProductList: Array<Product>;\n  constructor(private cartService: CartdataService) { }\n\n  ngOnInit(): void {\n    this.cartProductList = this.cartService.getCartProductList();\n  }\n\n}\n","<p>cart-list works!</p>\n<table>\n    <tr *ngFor='let product of cartProductList'>\n        <td>{{product.name}}</td>\n        <td>{{product.price}}</td>\n        <td><img [src]='product.imgPath'/></td>\n        \n    </tr>\n</table>","import { Injectable } from '@angular/core';\nimport { Product } from './product-list/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartdataService {\n\n  carProductList:Array<Product>=[];\n  constructor() { }\n  addProduct(product: Product){\n    this.carProductList.push(product);\n  }\n  getCartProductList():Array<Product>{\n    return this.carProductList;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  username:string;\n  constructor(private auth:AuthService) { }\n\n  ngOnInit() {\n      this.auth.getUserName().subscribe(newusername => this.username= newusername);\n  }\n\n}\n","<h2>Welcome {{username}}</h2>","import { Component, OnInit } from '@angular/core';\nimport { ProductdataserviceService } from '../productdataservice.service';\nimport { Product } from '../product-list/product';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.css'],\n  //providers:[ProductsdataService]\n})\nexport class InventoryComponent implements OnInit {\n  products:Array<Product>;\n  constructor(private dataService:ProductdataserviceService) {\n      \n  }\n\n  ngOnInit(): void {\n    this.products = this.dataService.getProductList();\n  }  \n  delete(id:number){\n    for(var i=0;i<this.products.length;i++){\n      if(this.products[i].id==id)\n        this.products.splice(i,1);\n    }\n  }\n  setNewValue(newPrice,id: number){\n    let p= this.findproductbyid(id);\n    p.price= newPrice;\n  }\n  findproductbyid(id:number):Product{\n    //let p= this.products.find(p=> id===id);\n    for(let p of this.products){\n      if(p.id== id)\n        return p;\n    }\n  }\n}\n","<h2>Inventory Products</h2>\n  <table>\n    <tr *ngFor=\"let product of products;\">      \n      <td>{{product.name}}</td>\n      <td>{{product.price | currency}}</td>\n      <app-priceupdater [pricevalue]=\"product.price\" (update)=\"setNewValue($event, product.id)\"></app-priceupdater>\n      <td><button (click)=\"delete(product.id)\">Delete</button></td>\n   </table> \n  ","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { FormGroup,FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',//view\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: string;//model\n  password: string;\n  resultString: string;\n  loginForm: FormGroup;\n  submitted = false;\n  loading = false;\n  constructor(private auth:AuthService,private router:Router,private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n  //   this.loginForm = this.formBuilder.group({\n  //     username: ['', Validators.required],\n  //     password: ['', Validators.required]\n  // });\n  }\n  //get f() { return this.loginForm.controls; }\n\n  onSubmit(){//controller\n    this.submitted = true;\n    this.loading= true;\n    console.log('onSubmit');\n    this.resultString = this.auth.login(this.username, this.password);\n    console.log(this.resultString);\n    if(this.resultString === ''){\n      this.auth.setUserName(this.username);\n      this.router.navigate(['/products']);\n    }\n    //this.router.navigate(['header']);\n    //this.router.navigateByUrl('/header');\n  }\n}\n","\n  <!--/.Navbar-->\n\n\n <!-- <mat-card>\n    <mat-form-field> -->\n\n\n        <!-- <mat-error *ngIf=\"username.invalid\">Enter user name.</mat-error> -->\n    <!-- </mat-form-field>\n </mat-card> -->\n <h3>Login</h3>\n Enter Username: <input matInput type=\"text\" name='username' [(ngModel)]=\"username\" required/><br/>\n Enter Password: <input type=\"password\" [(ngModel)]=\"password\"/><br>\n<button (click)=\"onSubmit()\">Login</button><br />\n<a routerLink=\"/registration\" class=\"btn btn-link\">Register</a>\n{{resultString}}\n\n\n\n<!-- <!DOCTYPE html>\n<html>\n<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"></script>  \n<body>\n\n<h2>Validation Example</h2>\n\n<form ng-app=\"myApp\" ng-controller=\"validateCtrl\" \nname=\"myForm\" novalidate>\n\n<p>Username:<br>\n<input type=\"text\" name=\"user\" ng-model=\"user\" required>\n<span style=\"color:red\" ng-show=\"myForm.user.$dirty && myForm.user.$invalid\">\n<span ng-show=\"myForm.user.$error.required\">Username is required.</span>\n</span>\n</p>\n\n<p>Email:<br>\n<input type=\"email\" name=\"email\" ng-model=\"email\" required>\n<span style=\"color:red\" ng-show=\"myForm.email.$dirty && myForm.email.$invalid\">\n<span ng-show=\"myForm.email.$error.required\">Email is required.</span>\n<span ng-show=\"myForm.email.$error.email\">Invalid email address.</span>\n</span>\n</p>\n\n<p>\n<input type=\"submit\"\nng-disabled=\"myForm.user.$dirty && myForm.user.$invalid ||  \nmyForm.email.$dirty && myForm.email.$invalid\">\n</p>\n\n</form>\n\n<script>\nvar app = angular.module('myApp', []);\napp.controller('validateCtrl', function($scope) {\n    $scope.user = 'John Doe';\n    $scope.email = 'john.doe@gmail.com';\n});\n</script>\n\n</body>\n</html>\n -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n  constructor() {\n   \n  }\n  ngOnInit() {\n  }\n\n}\n","<ul class=\"nav nav-pills\">\n    <li role=\"presentation\"><a routerLink=\"products\" >Products</a></li> \n    <li role=\"presentation\"><a routerLink=\"users\" >Users</a></li>  \n    <li role=\"presentation\"><a routerLink=\"cart\" >Cart</a></li> \n</ul>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pagenotfound',\n  templateUrl: './pagenotfound.component.html',\n  styleUrls: ['./pagenotfound.component.css']\n})\nexport class PagenotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  The Page you looking for is not found.\n</p>\n","import { Component, OnInit, Input,EventEmitter, Output} from '@angular/core';\n\n\n@Component({\n  selector: 'app-priceupdater',\n  templateUrl: './priceupdater.component.html',\n  styleUrls: ['./priceupdater.component.css']\n})\nexport class PriceupdaterComponent implements OnInit {\n  @Input() // will be set by parent\n  pricevalue:number;\n  \n  @Output()\n  update= new EventEmitter<number>();\n  constructor() {\n  \n  }\n\n  ngOnInit() {\n  \n  }\n  \n  updatePrice(){\n    console.log('updatePrice');\n    //emit a custom event with new value\n    this.update.emit(this.pricevalue);\n  }\n}\n","<input type='number' [(ngModel)]=\"pricevalue\"/><button (click)=\"updatePrice()\">Update</button>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Product } from './product';\nimport { ProductdataserviceService } from '../productdataservice.service';\nimport { BigBasketDataService } from '../BigBasketData.service';\nimport { CartdataService } from '../cartdata.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n  productList: Array<Product>;\n  constructor(private dataService:ProductdataserviceService, private cartService: CartdataService) {\n    //let dataService= new ProductdataserviceService();\n    \n  }\n\n  ngOnInit(): void {\n    this.productList = this.dataService.getProductList();   \n  }\n  addToCart(item: Product){\n    console.log('add to cart');\n    this.cartService.addProduct(item);\n  }\n\n}\n","<p>product-list works!</p>\n<!-- <ul>\n    <li *ngFor='let product of productList'>\n        {{product.name}} | {{product.price}} | {{product.category}}\n    </li>\n</ul> -->\n<table>\n    <tr *ngFor='let product of productList'>\n        <td>{{product.name}}</td>\n        <td>{{product.price}}</td>\n        <td><img [src]='product.imgPath'/></td>\n        <td><button (click)='addToCart(product)'>+</button></td>\n    </tr>\n</table>\n","export class Product{\r\n    id:number;\r\n    name:string;\r\n    imgPath:string;\r\n    category:string;\r\n    price:number;\r\n    constructor(id:number,name:string,category:string,price:number,imgPath:string){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.imgPath = imgPath;\r\n        this.price = price;\r\n        this.category = category;\r\n    }    \r\n}","import { Injectable } from '@angular/core';\nimport { Product } from './product-list/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductdataserviceService {\n  productList:Array<Product>=[];\n  constructor() {  \n    //super();\n    let p1 = new Product(1, \"MotoG4\", \"Mobiles\", 24000, \"assets/images/1.jpg\");\n    let p2 = new Product(2, \"SonyDSC\", \"Camera\", 64000, \"assets/images/2.jpg\");\n    let p3 = new Product(3, \"Lenovo110\", \"Laptops\", 54000, \"assets/images/3.jpg\");\n    let p4 = new Product(4, \"Xiomi55\", \"Mobiles\", 14000, \"assets/images/4.jpg\");\n    let p5 = new Product(5, \"Samsung Galaxy\", \"Mobiles\", 44000, \"assets/images/5.jpg\");\n    this.productList.push(p1);\n    this.productList.push(p2);\n    this.productList.push(p3);\n    this.productList.push(p4);\n    this.productList.push(p5);\n  }\n  getProductList():Array<Product>{\n    return this.productList;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserdataService } from '../userdata.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl:'./registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  signupForm: FormGroup;\n  constructor(private userdata: UserdataService,private router: Router,private formBuilder: FormBuilder,) { \n     this.signupForm = new FormGroup({\n       firstname: new FormControl(),\n       lastname: new FormControl(),\n       username: new FormControl(),\n       password: new FormControl()\n     }); \n  }\n\n  ngOnInit() {  \n    /* this.signupForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n  }); */ \n  }\n  //get f() { return this.signupForm.controls; }\n\n  onSubmit(){\n    if(this.signupForm.valid){\n      console.log('form submitted', this.signupForm.value);\n      /* this.userdata.addUser({email:this.signupForm.value.email,Password:this.signupForm.value.password,gender:this.signupForm.value.gender,country:this.signupForm.value.country}).subscribe(resp=>{\n        console.log(resp);\n      });\n    }else{\n      console.log('input wrong input');\n    } */\n    this.userdata.addUser(\n      {firstname:this.signupForm.value.firstname,\n        lastname:this.signupForm.value.lastname,\n        username:this.signupForm.value.username,\n      password:this.signupForm.value.password});\n    this.router.navigate(['/login']);\n    \n    }\n  }\n}\n","<div>\n  <div>\n    <form [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n        <fieldset>\n          <legend>SignUp</legend>\n\n            <!--- First name Block --->\n            <div class=\"form-group\">\n              <label for=\"firstname\">firstname</label>\n              <input type=\"text\"\n                id=\"firstname\"\n                placeholder=\"firstname\" formControlName=\"firstname\">\n\n                \n            </div>\n            \n            <!--- Last name Block --->\n            <div class=\"form-group\">\n              <label for=\"lastname\">lastname</label>\n              <input type=\"text\"\n                id=\"lastname\"\n                placeholder=\"lastname\" formControlName=\"lastname\">\n\n                \n            </div>\n         \n            <!--- Email Block --->\n            <div class=\"form-group\">\n              <label for=\"inputusername\">username</label>\n              <input type=\"text\"\n                id=\"inputusername\"\n                placeholder=\"username\" formControlName=\"username\"\n                required>\n                  \n            </div>\n            <label *ngIf = \"signupForm.get('username').invalid && signupForm.get('username').dirty\" [ngClass] = \"'error'\"> Enter user name. </label>\n            <!-- <p *ngIf != \"username\">Input user name</p> -->\n             \n            <!--- Password Block --->\n            <div>\n            <div class=\"form-group\">\n              <label for=\"inputPassword\">Password</label>\n              <input type=\"password\"\n                id=\"inputPassword\"\n                placeholder=\"Password\" formControlName=\"password\" required>\n            </div>\n            <label *ngIf = \"signupForm.get('password').invalid\" > Enter password. </label>\n            \n          </div>\n                   \n           <!--- Buttons Block --->\n            <div class=\"form-group\">\n              <a routerLink=\"/login\" class=\"btn btn-link\">Cancel</a>\n                <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n            </div>\n        </fieldset>\n    </form>\n    <p>Form value {{ signupForm.value | json }} </p>\n    <p>Form status {{ signupForm.status | json}} </p>\n     \n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class RoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from './userlist/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserdataService {\n  userList:Array<User>=[];\n  constructor(private http:HttpClient) { }\n  /* getUsers():Observable<any>{\n    return this.http.get('http://jsonplaceholder.typicode.com/users');\n  } */\n  getUsers():Array<User>{\n    return this.userList;\n  }\n  // getUser(id:number):Observable<any>{\n  //   return this.http.get('http://jsonplaceholder.typicode.com/users/'+ id);\n  // }\n  getUser(username:string):User{\n    //return this.userList.find(x=>);\n    return this.userList.find(x => x.username === username);\n  }\n  /* addUser(user:any):Observable<any>{\n    return this.http.post('http://jsonplaceholder.typicode.com/users', user);\n  } */\n  addUser(user:any){\n    this.userList.push(user);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserdataService } from '../userdata.service';\nimport { flatMap } from 'rxjs/internal/operators';\n//import { FlatMap } from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-userdetails',\n  templateUrl: './userdetails.component.html',\n  styleUrls: ['./userdetails.component.css']\n})\nexport class UserdetailsComponent implements OnInit {\n  userid: string;\n  user: any;\n  //params: any;\n  constructor(private activateroute: ActivatedRoute, private userservice: UserdataService) {\n    console.log(this.activateroute.params);\n  }\n\n  ngOnInit() {\n     /* this.activateroute.params.subscribe(params =>{\n       console.log('user id' + params['id']);\n      this.userid=params['id'];\n    }); */ \n    const queryParams = this.activateroute.snapshot.queryParams\n    const routeParams = this.activateroute.snapshot.params;\n\n        // do something with the parameters\n        console.log(routeParams.username);\n\n    //goToProductDetails(id) {\n    //  this.router.navigate(['/product-details', id]);\n    //}\n\n    // this.activateroute.paramMap\n    // .pipe(flatMap(routeparams=>this.userservice.getUser((routeparams.get('id'))))\n    // .subscribe(userobj=>this.user=userobj);\n    this.user =this.userservice.getUser(this.userid);\n}\n  \n}\n","<p>\n  User Details for {{user?.username}}\n</p>\n<h3>User Details Component</h3>\n<p>\n  \n  \n</p>\n<p>Name: {{user?.firstname}}</p>\n<p>Email:{{user?.lastname}}</p>\n","import { Component, OnInit } from '@angular/core';\nimport { UserdataService } from '../userdata.service';\n\n@Component({\n  selector: 'app-userlist',\n  templateUrl:'./userlist.component.html',\n  styleUrls: ['./userlist.component.css']\n})\nexport class UserlistComponent implements OnInit {\n  userList: Array<any>;\n     \n    constructor(private userdataService: UserdataService){            \n    }\n    ngOnInit() {\n      /* this.userdata.getUsers().subscribe(userarray  => {\n        this.userList=userarray;\n      }); */\n      this.userList= this.userdataService.getUsers();\n        \n    }\n    /* addUser(){\n      this.userdata.addUser({name:'Tina',email:'tina@gmail.com'}).subscribe(resp=>{\n        console.log(resp);\n      });\n    } */\n}\n","<h2>List of Users <h2> \n    <ul>\n        <li *ngFor=\"let user of userList\"><a [routerLink]=\"['userdetails',user.username]\">{{user.username}}</a></li>\n    </ul>\n    <!-- <button (click)=\"addUser()\">Add User</button> -->\n    <!-- <router-outlet></router-outlet> -->","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}