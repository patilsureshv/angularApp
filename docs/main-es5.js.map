{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/BigBasketData.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/cart-list/cart-list.component.ts","webpack:///src/app/cart-list/cart-list.component.html","webpack:///src/app/cartdata.service.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/inventory/inventory.component.ts","webpack:///src/app/inventory/inventory.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/pagenotfound/pagenotfound.component.ts","webpack:///src/app/pagenotfound/pagenotfound.component.html","webpack:///src/app/priceupdater/priceupdater.component.ts","webpack:///src/app/priceupdater/priceupdater.component.html","webpack:///src/app/product-list/product-list.component.ts","webpack:///src/app/product-list/product-list.component.html","webpack:///src/app/product-list/product.ts","webpack:///src/app/productdataservice.service.ts","webpack:///src/app/registration/registration.component.ts","webpack:///src/app/registration/registration.component.html","webpack:///src/app/routing/routing.module.ts","webpack:///src/app/userdata.service.ts","webpack:///src/app/userdetails/userdetails.component.ts","webpack:///src/app/userdetails/userdetails.component.html","webpack:///src/app/userlist/userlist.component.ts","webpack:///src/app/userlist/userlist.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","BigBasketDataService","productList","p1","p2","p3","p4","p5","push","providedIn","routes","path","component","children","AppRoutingModule","forRoot","imports","AppComponent","auth","router","title","getUserName","subscribe","newusername","username","logout","navigate","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthService","userDataSerice","subject","next","asObservable","password","users","getUsers","console","log","user","find","x","CartListComponent","cartService","cartProductList","getCartProductList","CartdataService","carProductList","product","HeaderComponent","InventoryComponent","dataService","products","getProductList","i","length","splice","newPrice","p","findproductbyid","price","LoginComponent","formBuilder","submitted","loading","resultString","login","setUserName","onSubmit","MenuComponent","PagenotfoundComponent","PriceupdaterComponent","update","emit","pricevalue","updatePrice","ProductListComponent","item","addProduct","Product","name","category","imgPath","ProductdataserviceService","RegistrationComponent","userdata","signupForm","firstname","lastname","valid","value","addUser","RoutingModule","UserdataService","http","userList","UserdetailsComponent","activateroute","userservice","params","queryParams","snapshot","routeParams","getUser","userid","UserlistComponent","userdataService","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","\nimport { Injectable } from '@angular/core';\nimport { Product } from './product-list/product';\n\n@Injectable({\n  providedIn:'root'\n})\nexport class BigBasketDataService{\n  productList:Array<Product>=[];\n  constructor() {  \n    //super();\n    let p1 = new Product(1, \"MotoG4\", \"Mobiles\", 24000, \"assets/images/1.jpg\");\n    let p2 = new Product(2, \"SonyDSC\", \"Camera\", 64000, \"assets/images/2.jpg\");\n    let p3 = new Product(3, \"Lenovo110\", \"Laptops\", 54000, \"assets/images/3.jpg\");\n    let p4 = new Product(4, \"Xiomi55\", \"Mobiles\", 14000, \"assets/images/4.jpg\");\n    let p5 = new Product(5, \"Samsung Galaxy\", \"Mobiles\", 44000, \"assets/images/5.jpg\");\n    this.productList.push(p1);\n    this.productList.push(p2);\n    this.productList.push(p3);\n    this.productList.push(p4);\n    this.productList.push(p5);\n  }\n  getProductList():Array<Product>{\n    return this.productList;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { UserlistComponent } from './userlist/userlist.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { UserdetailsComponent } from './userdetails/userdetails.component';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { HeaderComponent } from './header/header.component';\nimport { CartListComponent } from './cart-list/cart-list.component';\n\n\nconst routes: Routes = [\n  {\n    path:'',\n    component:LoginComponent\n  },\n  {\n    path:'login',\n    component:LoginComponent\n  },\n  {\n    path:'users',\n    component:UserlistComponent,\n    children:[\n      {\n        path:'userdetails/:id',\n        component:UserdetailsComponent\n      }\n    ]\n  },\n  {\n    path:'inventory',\n    component:InventoryComponent\n  },\n  {\n    path:'registration',\n    component:RegistrationComponent\n  },\n  {\n    path:'products',\n    component:ProductListComponent\n  },\n  {\n    path:'header',\n    component:HeaderComponent\n  },\n  {\n    path:'cart',\n    component:CartListComponent\n  },\n  {\n    path: '**',\n    component: PagenotfoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core'; //typescript imports\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl:'./app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'demo'; //model\n  username:string;\n  editTitle(){//controller\n\n  }\n  constructor(private auth:AuthService, private router:Router) { }\n  ngOnInit(){\n    this.auth.getUserName().subscribe(newusername => this.username= newusername);\n  }\n  logout(){\n    this.auth.logout();\n    this.router.navigate(['/login']);\n  }\n}\n","<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"username\">\n    <div class=\"navbar-nav\">\n        <!-- <app-menu></app-menu> -->\n        <a class=\"nav-item nav-link\" routerLink=\"/users\" mat-menu-item>Home</a>\n        <a class=\"nav-item nav-link\" routerLink=\"/products\">Product</a>\n        <a class=\"nav-item nav-link\" routerLink=\"/cart\">cart</a>\n        <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n    </div>\n</nav>\n<router-outlet></router-outlet>","import { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { BigBasketDataService } from './BigBasketData.service';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { PriceupdaterComponent } from './priceupdater/priceupdater.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HeaderComponent } from './header/header.component';\nimport { UserlistComponent } from './userlist/userlist.component';\nimport { UserdetailsComponent } from './userdetails/userdetails.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { CartListComponent } from './cart-list/cart-list.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RoutingModule } from './routing/routing.module';\n//import { MatInputModule } from \"@angular/material\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ProductListComponent,\n    PriceupdaterComponent,\n    HeaderComponent,\n    UserlistComponent,\n    UserdetailsComponent,\n    RegistrationComponent,\n    MenuComponent,\n    InventoryComponent,\n    CartListComponent // list of components\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    RoutingModule,\n  ],\n  providers: [BigBasketDataService],\n  bootstrap: [AppComponent] // which is root component\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { strict } from 'assert';\nimport { UserdataService } from './userdata.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  subject = new Subject<string>();// stream of values\n  constructor(private userDataSerice:UserdataService) { \n    \n  }\n  setUserName(username:string){\n    this.subject.next(username); // add it to the stream of values\n  }\n  getUserName():Observable<string>{\n    return this.subject.asObservable(); // emit  every new value\n  }\n  login(username:string,password:string):string{\n    //const users = this.userDataSerice.userList.find();\n    const users = this.userDataSerice.getUsers();\n    console.log(users);\n    const user=users.find(x => x.username === username && x.password === password);\n    if (!user) {\n      return 'Invalid user name or password';\n    }else{\n      return '';\n    }\n  }\n  logout(){\n    this.subject.next(null);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CartdataService } from '../cartdata.service';\nimport { Product } from '../product-list/product';\n\n@Component({\n  selector: 'app-cart-list',\n  templateUrl: './cart-list.component.html',\n  styleUrls: ['./cart-list.component.css']\n})\nexport class CartListComponent implements OnInit {\n  cartProductList: Array<Product>;\n  constructor(private cartService: CartdataService) { }\n\n  ngOnInit(): void {\n    this.cartProductList = this.cartService.getCartProductList();\n  }\n\n}\n","<p>cart-list works!</p>\n<table>\n    <tr *ngFor='let product of cartProductList'>\n        <td>{{product.name}}</td>\n        <td>{{product.price}}</td>\n        <td><img [src]='product.imgPath'/></td>\n        \n    </tr>\n</table>","import { Injectable } from '@angular/core';\nimport { Product } from './product-list/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartdataService {\n\n  carProductList:Array<Product>=[];\n  constructor() { }\n  addProduct(product: Product){\n    this.carProductList.push(product);\n  }\n  getCartProductList():Array<Product>{\n    return this.carProductList;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  username:string;\n  constructor(private auth:AuthService) { }\n\n  ngOnInit() {\n      this.auth.getUserName().subscribe(newusername => this.username= newusername);\n  }\n\n}\n","<h2>Welcome {{username}}</h2>","import { Component, OnInit } from '@angular/core';\nimport { ProductdataserviceService } from '../productdataservice.service';\nimport { Product } from '../product-list/product';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.css'],\n  //providers:[ProductsdataService]\n})\nexport class InventoryComponent implements OnInit {\n  products:Array<Product>;\n  constructor(private dataService:ProductdataserviceService) {\n      \n  }\n\n  ngOnInit(): void {\n    this.products = this.dataService.getProductList();\n  }  \n  delete(id:number){\n    for(var i=0;i<this.products.length;i++){\n      if(this.products[i].id==id)\n        this.products.splice(i,1);\n    }\n  }\n  setNewValue(newPrice,id: number){\n    let p= this.findproductbyid(id);\n    p.price= newPrice;\n  }\n  findproductbyid(id:number):Product{\n    //let p= this.products.find(p=> id===id);\n    for(let p of this.products){\n      if(p.id== id)\n        return p;\n    }\n  }\n}\n","<h2>Inventory Products</h2>\n  <table>\n    <tr *ngFor=\"let product of products;\">      \n      <td>{{product.name}}</td>\n      <td>{{product.price | currency}}</td>\n      <app-priceupdater [pricevalue]=\"product.price\" (update)=\"setNewValue($event, product.id)\"></app-priceupdater>\n      <td><button (click)=\"delete(product.id)\">Delete</button></td>\n   </table> \n  ","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { FormGroup,FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',//view\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: string;//model\n  password: string;\n  resultString: string;\n  loginForm: FormGroup;\n  submitted = false;\n  loading = false;\n  constructor(private auth:AuthService,private router:Router,private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n  //   this.loginForm = this.formBuilder.group({\n  //     username: ['', Validators.required],\n  //     password: ['', Validators.required]\n  // });\n  }\n  //get f() { return this.loginForm.controls; }\n\n  onSubmit(){//controller\n    this.submitted = true;\n    this.loading= true;\n    console.log('onSubmit');\n    this.resultString = this.auth.login(this.username, this.password);\n    console.log(this.resultString);\n    if(this.resultString === ''){\n      this.auth.setUserName(this.username);\n      this.router.navigate(['/products']);\n    }\n    //this.router.navigate(['header']);\n    //this.router.navigateByUrl('/header');\n  }\n}\n","\n  <!--/.Navbar-->\n\n\n <!-- <mat-card>\n    <mat-form-field> -->\n\n\n        <!-- <mat-error *ngIf=\"username.invalid\">Enter user name.</mat-error> -->\n    <!-- </mat-form-field>\n </mat-card> -->\n <h3>Login</h3>\n Enter Username: <input matInput type=\"text\" name='username' [(ngModel)]=\"username\" required/><br/>\n Enter Password: <input type=\"password\" [(ngModel)]=\"password\"/><br>\n<button (click)=\"onSubmit()\">Login</button><br />\n<a routerLink=\"/registration\" class=\"btn btn-link\">Register</a>\n{{resultString}}\n\n\n\n<!-- <!DOCTYPE html>\n<html>\n<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"></script>  \n<body>\n\n<h2>Validation Example</h2>\n\n<form ng-app=\"myApp\" ng-controller=\"validateCtrl\" \nname=\"myForm\" novalidate>\n\n<p>Username:<br>\n<input type=\"text\" name=\"user\" ng-model=\"user\" required>\n<span style=\"color:red\" ng-show=\"myForm.user.$dirty && myForm.user.$invalid\">\n<span ng-show=\"myForm.user.$error.required\">Username is required.</span>\n</span>\n</p>\n\n<p>Email:<br>\n<input type=\"email\" name=\"email\" ng-model=\"email\" required>\n<span style=\"color:red\" ng-show=\"myForm.email.$dirty && myForm.email.$invalid\">\n<span ng-show=\"myForm.email.$error.required\">Email is required.</span>\n<span ng-show=\"myForm.email.$error.email\">Invalid email address.</span>\n</span>\n</p>\n\n<p>\n<input type=\"submit\"\nng-disabled=\"myForm.user.$dirty && myForm.user.$invalid ||  \nmyForm.email.$dirty && myForm.email.$invalid\">\n</p>\n\n</form>\n\n<script>\nvar app = angular.module('myApp', []);\napp.controller('validateCtrl', function($scope) {\n    $scope.user = 'John Doe';\n    $scope.email = 'john.doe@gmail.com';\n});\n</script>\n\n</body>\n</html>\n -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n  constructor() {\n   \n  }\n  ngOnInit() {\n  }\n\n}\n","<ul class=\"nav nav-pills\">\n    <li role=\"presentation\"><a routerLink=\"products\" >Products</a></li> \n    <li role=\"presentation\"><a routerLink=\"users\" >Users</a></li>  \n    <li role=\"presentation\"><a routerLink=\"cart\" >Cart</a></li> \n</ul>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pagenotfound',\n  templateUrl: './pagenotfound.component.html',\n  styleUrls: ['./pagenotfound.component.css']\n})\nexport class PagenotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  The Page you looking for is not found.\n</p>\n","import { Component, OnInit, Input,EventEmitter, Output} from '@angular/core';\n\n\n@Component({\n  selector: 'app-priceupdater',\n  templateUrl: './priceupdater.component.html',\n  styleUrls: ['./priceupdater.component.css']\n})\nexport class PriceupdaterComponent implements OnInit {\n  @Input() // will be set by parent\n  pricevalue:number;\n  \n  @Output()\n  update= new EventEmitter<number>();\n  constructor() {\n  \n  }\n\n  ngOnInit() {\n  \n  }\n  \n  updatePrice(){\n    console.log('updatePrice');\n    //emit a custom event with new value\n    this.update.emit(this.pricevalue);\n  }\n}\n","<input type='number' [(ngModel)]=\"pricevalue\"/><button (click)=\"updatePrice()\">Update</button>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Product } from './product';\nimport { ProductdataserviceService } from '../productdataservice.service';\nimport { BigBasketDataService } from '../BigBasketData.service';\nimport { CartdataService } from '../cartdata.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n  productList: Array<Product>;\n  constructor(private dataService:ProductdataserviceService, private cartService: CartdataService) {\n    //let dataService= new ProductdataserviceService();\n    \n  }\n\n  ngOnInit(): void {\n    this.productList = this.dataService.getProductList();   \n  }\n  addToCart(item: Product){\n    console.log('add to cart');\n    this.cartService.addProduct(item);\n  }\n\n}\n","<p>product-list works!</p>\n<!-- <ul>\n    <li *ngFor='let product of productList'>\n        {{product.name}} | {{product.price}} | {{product.category}}\n    </li>\n</ul> -->\n<table>\n    <tr *ngFor='let product of productList'>\n        <td>{{product.name}}</td>\n        <td>{{product.price}}</td>\n        <td><img [src]='product.imgPath'/></td>\n        <td><button (click)='addToCart(product)'>+</button></td>\n    </tr>\n</table>\n","export class Product{\r\n    id:number;\r\n    name:string;\r\n    imgPath:string;\r\n    category:string;\r\n    price:number;\r\n    constructor(id:number,name:string,category:string,price:number,imgPath:string){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.imgPath = imgPath;\r\n        this.price = price;\r\n        this.category = category;\r\n    }    \r\n}","import { Injectable } from '@angular/core';\nimport { Product } from './product-list/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductdataserviceService {\n  productList:Array<Product>=[];\n  constructor() {  \n    //super();\n    let p1 = new Product(1, \"MotoG4\", \"Mobiles\", 24000, \"assets/images/1.jpg\");\n    let p2 = new Product(2, \"SonyDSC\", \"Camera\", 64000, \"assets/images/2.jpg\");\n    let p3 = new Product(3, \"Lenovo110\", \"Laptops\", 54000, \"assets/images/3.jpg\");\n    let p4 = new Product(4, \"Xiomi55\", \"Mobiles\", 14000, \"assets/images/4.jpg\");\n    let p5 = new Product(5, \"Samsung Galaxy\", \"Mobiles\", 44000, \"assets/images/5.jpg\");\n    this.productList.push(p1);\n    this.productList.push(p2);\n    this.productList.push(p3);\n    this.productList.push(p4);\n    this.productList.push(p5);\n  }\n  getProductList():Array<Product>{\n    return this.productList;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserdataService } from '../userdata.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl:'./registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  signupForm: FormGroup;\n  constructor(private userdata: UserdataService,private router: Router,private formBuilder: FormBuilder,) { \n     this.signupForm = new FormGroup({\n       firstname: new FormControl(),\n       lastname: new FormControl(),\n       username: new FormControl(),\n       password: new FormControl()\n     }); \n  }\n\n  ngOnInit() {  \n    /* this.signupForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n  }); */ \n  }\n  //get f() { return this.signupForm.controls; }\n\n  onSubmit(){\n    if(this.signupForm.valid){\n      console.log('form submitted', this.signupForm.value);\n      /* this.userdata.addUser({email:this.signupForm.value.email,Password:this.signupForm.value.password,gender:this.signupForm.value.gender,country:this.signupForm.value.country}).subscribe(resp=>{\n        console.log(resp);\n      });\n    }else{\n      console.log('input wrong input');\n    } */\n    this.userdata.addUser(\n      {firstname:this.signupForm.value.firstname,\n        lastname:this.signupForm.value.lastname,\n        username:this.signupForm.value.username,\n      password:this.signupForm.value.password});\n    this.router.navigate(['/login']);\n    \n    }\n  }\n}\n","<div>\n  <div>\n    <form [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n        <fieldset>\n          <legend>SignUp</legend>\n\n            <!--- First name Block --->\n            <div class=\"form-group\">\n              <label for=\"firstname\">firstname</label>\n              <input type=\"text\"\n                id=\"firstname\"\n                placeholder=\"firstname\" formControlName=\"firstname\">\n\n                \n            </div>\n            \n            <!--- Last name Block --->\n            <div class=\"form-group\">\n              <label for=\"lastname\">lastname</label>\n              <input type=\"text\"\n                id=\"lastname\"\n                placeholder=\"lastname\" formControlName=\"lastname\">\n\n                \n            </div>\n         \n            <!--- Email Block --->\n            <div class=\"form-group\">\n              <label for=\"inputusername\">username</label>\n              <input type=\"text\"\n                id=\"inputusername\"\n                placeholder=\"username\" formControlName=\"username\"\n                required>\n                  \n            </div>\n            <label *ngIf = \"signupForm.get('username').invalid && signupForm.get('username').dirty\" [ngClass] = \"'error'\"> Enter user name. </label>\n            <!-- <p *ngIf != \"username\">Input user name</p> -->\n             \n            <!--- Password Block --->\n            <div>\n            <div class=\"form-group\">\n              <label for=\"inputPassword\">Password</label>\n              <input type=\"password\"\n                id=\"inputPassword\"\n                placeholder=\"Password\" formControlName=\"password\" required>\n            </div>\n            <label *ngIf = \"signupForm.get('password').invalid\" > Enter password. </label>\n            \n          </div>\n                   \n           <!--- Buttons Block --->\n            <div class=\"form-group\">\n              <a routerLink=\"/login\" class=\"btn btn-link\">Cancel</a>\n                <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n            </div>\n        </fieldset>\n    </form>\n    <p>Form value {{ signupForm.value | json }} </p>\n    <p>Form status {{ signupForm.status | json}} </p>\n     \n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class RoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from './userlist/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserdataService {\n  userList:Array<User>=[];\n  constructor(private http:HttpClient) { }\n  /* getUsers():Observable<any>{\n    return this.http.get('http://jsonplaceholder.typicode.com/users');\n  } */\n  getUsers():Array<User>{\n    return this.userList;\n  }\n  // getUser(id:number):Observable<any>{\n  //   return this.http.get('http://jsonplaceholder.typicode.com/users/'+ id);\n  // }\n  getUser(username:string):User{\n    //return this.userList.find(x=>);\n    return this.userList.find(x => x.username === username);\n  }\n  /* addUser(user:any):Observable<any>{\n    return this.http.post('http://jsonplaceholder.typicode.com/users', user);\n  } */\n  addUser(user:any){\n    this.userList.push(user);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserdataService } from '../userdata.service';\nimport { flatMap } from 'rxjs/internal/operators';\n//import { FlatMap } from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-userdetails',\n  templateUrl: './userdetails.component.html',\n  styleUrls: ['./userdetails.component.css']\n})\nexport class UserdetailsComponent implements OnInit {\n  userid: string;\n  user: any;\n  //params: any;\n  constructor(private activateroute: ActivatedRoute, private userservice: UserdataService) {\n    console.log(this.activateroute.params);\n  }\n\n  ngOnInit() {\n     /* this.activateroute.params.subscribe(params =>{\n       console.log('user id' + params['id']);\n      this.userid=params['id'];\n    }); */ \n    const queryParams = this.activateroute.snapshot.queryParams\n    const routeParams = this.activateroute.snapshot.params;\n\n        // do something with the parameters\n        console.log(routeParams.username);\n\n    //goToProductDetails(id) {\n    //  this.router.navigate(['/product-details', id]);\n    //}\n\n    // this.activateroute.paramMap\n    // .pipe(flatMap(routeparams=>this.userservice.getUser((routeparams.get('id'))))\n    // .subscribe(userobj=>this.user=userobj);\n    this.user =this.userservice.getUser(this.userid);\n}\n  \n}\n","<p>\n  User Details for {{user?.username}}\n</p>\n<h3>User Details Component</h3>\n<p>\n  \n  \n</p>\n<p>Name: {{user?.firstname}}</p>\n<p>Email:{{user?.lastname}}</p>\n","import { Component, OnInit } from '@angular/core';\nimport { UserdataService } from '../userdata.service';\n\n@Component({\n  selector: 'app-userlist',\n  templateUrl:'./userlist.component.html',\n  styleUrls: ['./userlist.component.css']\n})\nexport class UserlistComponent implements OnInit {\n  userList: Array<any>;\n     \n    constructor(private userdataService: UserdataService){            \n    }\n    ngOnInit() {\n      /* this.userdata.getUsers().subscribe(userarray  => {\n        this.userList=userarray;\n      }); */\n      this.userList= this.userdataService.getUsers();\n        \n    }\n    /* addUser(){\n      this.userdata.addUser({name:'Tina',email:'tina@gmail.com'}).subscribe(resp=>{\n        console.log(resp);\n      });\n    } */\n}\n","<h2>List of Users <h2> \n    <ul>\n        <li *ngFor=\"let user of userList\"><a [routerLink]=\"['userdetails',user.username]\">{{user.username}}</a></li>\n    </ul>\n    <!-- <button (click)=\"addUser()\">Add User</button> -->\n    <!-- <router-outlet></router-outlet> -->","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}